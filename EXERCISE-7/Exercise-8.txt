Exercise-8

1)IMAGESLIDER APP
import React, { useState } from 'react';
import Image1 from './image1.jpg';
import Image2 from './image2.jpg';
import Image3 from './image3.jpg';
import './App.css'; // Import CSS file

const ImageSlider = () => {
  const images = [
    { id: 1, url: Image1 },
    { id: 2, url: Image2 },
    { id: 3, url: Image3 },
  ];
  const [activeIndex, setActiveIndex] = useState(0);

  const handleNext = () => {
    setActiveIndex((prevIndex) => (prevIndex === images.length - 1 ? 0 : prevIndex + 1));
  };

  const handlePrev = () => {
    setActiveIndex((prevIndex) => (prevIndex === 0 ? images.length - 1 : prevIndex - 1));
  };

  const handleImageClick = (index) => {
    setActiveIndex(index);
  };

  return (
    <div className="image-slider">
        <h1>Image Slider</h1>
      <button className="button" onClick={handlePrev}>Previous</button>
      <img src={images[activeIndex].url} alt={`Slide ${activeIndex + 1}`} />
      <button className="button" onClick={handleNext}>Next</button>
      <div className="option-circles">
        {images.map((image, index) => (
          <span
            key={image.id}
            className={index === activeIndex ? 'active' : ''}
            onClick={() => handleImageClick(index)}
          />
        ))}
      </div>
    </div>
  );
};

export default ImageSlider;
-----------------------------------------------------------------
2)SEARCH FILTER APP
import React, { useState } from 'react'; // Importing the search icon
import './SearchFilter.css'; // Import CSS file

const SearchFilter = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [filteredItems, setFilteredItems] = useState([]);

  const items = [
    'Apple',
    'Banana',
    'Orange',
    'Pineapple',
    'Grapes',
    'Watermelon',
    'Strawberry',
    'Mango',
    'Peach',
    'Kiwi',
    'Pear',
    'Lemon',
    'Cherry',
    'Blueberry',
    'Raspberry',
    'Blackberry',
    'Apricot',
    'Pomegranate',
    'Plum',
    'Cantaloupe',
    'Honeydew',
    'Fig',
    'Guava',
    'Passion Fruit',
    'Lychee',
    'Coconut',
    'Papaya',
    'Dragon Fruit',
    'Persimmon',
    'Starfruit',
    'Durian',
  ];

  const handleSearchChange = (event) => {
    const term = event.target.value;
    setSearchTerm(term);
    const filtered = items.filter((item) =>
      item.toLowerCase().includes(term.toLowerCase())
    );
    setFilteredItems(filtered);
  };

  return (
    <div className="search-filter">
      <input
        type="text"
        placeholder="Search..."
        value={searchTerm}
        onChange={handleSearchChange}
      />

      <ul className="search-results">
        {filteredItems.length > 0 ? (
          filteredItems.map((item, index) => (
            <li key={index}>{item}</li>
          ))
        ) : (
          <li>No items found</li>
        )}
      </ul>
    </div>
  );
};

export default SearchFilter;
