
Exercise-7

1)STUDENT APP

import React from 'react';
import './App.css';

const StudentDetails = ({ student }) => {
  const { name, marks } = student;

  const totalMarks = marks.reduce((total, mark) => total + mark, 0);

  return (
    <div className="student-details">
      <h2>{name}'s Marks Details</h2>
      <ul>  
        {marks.map((mark, index) => (
          <li key={index}>Subject {index + 1}: {mark}</li>
        ))}
      </ul>
      <p>Total Marks: {totalMarks}</p>
    </div>
  );
};

const MarkDetails = ({ students }) => {
  return (
    <div className="mark-details">
      <h1>Mark Details of Students</h1>
      {students.map((student, index) => (
        <StudentDetails key={index} student={student} />
      ))}
    </div>
  );
};

const students = [
  { name: 'Mohamed Aslam', marks: [80, 85, 90] },
  { name: 'Akash', marks: [75, 82, 88] },
  { name: 'Rene', marks: [90, 88, 92] }
];

const Student = () => {
  return <MarkDetails students={students} />;
};

export default Student;
----------------------------------------------------------------------------
2)TODO APP
import React, { useState } from 'react';
import './Todo.css'; // Import CSS file

const Todo = () => {
  const [todos, setTodos] = useState([]);
  const [inputValue, setInputValue] = useState('');
  const [filter, setFilter] = useState('all');

  const handleInputChange = (event) => {
    setInputValue(event.target.value);
  };

  const handleAddTodo = () => {
    if (inputValue.trim() !== '') {
      setTodos([...todos, { text: inputValue, completed: false }]);
      setInputValue('');
    }
  };

  const handleDeleteTodo = (index) => {
    setTodos(todos.filter((_, i) => i !== index));
  };

  const handleToggleComplete = (index) => {
    setTodos(
      todos.map((todo, i) =>
        i === index ? { ...todo, completed: !todo.completed } : todo
      )
    );
  };

  const filteredTodos = todos.filter((todo) => {
    if (filter === 'completed') {
      return todo.completed;
    } else if (filter === 'active') {
      return !todo.completed;
    } else {
      return true;
    }
  });

  return (
    <div className="todo-container">
      <h1>Todo List</h1>
      <input
        type="text"
        className="todo-input"
        value={inputValue}
        onChange={handleInputChange}
        placeholder="Enter new todo..."
      />
      <button onClick={handleAddTodo}>Add</button>
      <select value={filter} onChange={(e) => setFilter(e.target.value)}>
        <option value="all">All</option>
        <option value="completed">Completed</option>
        <option value="active">Active</option>
      </select>
      <ul className="todo-list">
        {filteredTodos.map((todo, index) => (
          <li key={index} className="todo-item">
            <input
              type="checkbox"
              checked={todo.completed}
              onChange={() => handleToggleComplete(index)}
            />
            <span
              className={`todo-text ${todo.completed ? 'todo-completed' : ''}`}
            >
              {todo.text}
            </span>
            <button
              onClick={() => handleDeleteTodo(index)}
              className="todo-delete"
            >
              Delete
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default Todo;
--------------------------------------------------------------------------------------------
3)WEATHER APP
import React, { useState } from 'react';
import './Weather.css';

function Weather() {
  const [location, setLocation] = useState('');
  const [weatherData, setWeatherData] = useState(null);
  const API_KEY = 'f8aa214cacd9fb1deb8e29cdbacaee19';

  const handleSearch = async () => {
    try {
      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&APPID=${API_KEY}`);
      const data = await response.json();
      setWeatherData(data);
      console.log(data);
    } catch (error) {
      console.error('Error fetching weather data:', error);
    }
  };

  return (
    <div className="container">
      <div className="weather-app">
        <h1>Weather App</h1>
        <div className="search-box">
          <input
            type="text"
            placeholder="Enter location"
            value={location}
            onChange={(e) => setLocation(e.target.value)}
          />
          <button onClick={handleSearch}>Search</button>
        </div>

        {weatherData ? (
          <div className="weather-data">
            <h2>Current Weather for {weatherData.name}</h2>
            <p>Temperature: {weatherData.main?.temp}Â°C</p>
            <p>Humidity: {weatherData.main?.humidity}%</p>
            <p>Wind Speed: {weatherData.wind?.speed} m/s</p>
            {weatherData.weather && (
              <p>Precipitation: {weatherData.weather[0]?.description}</p>
            )}
          </div>
        ) : (
          <p>No weather data available</p>
        )}
      </div>
    </div>
  );
}

export default Weather;